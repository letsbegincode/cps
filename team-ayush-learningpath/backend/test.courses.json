[
  {
    "_id": {
      "$oid": "685fc69504baeb1d731511c7"
    },
    "title": "Data Structures & Algorithms",
    "slug": "data-structures-algorithms",
    "description": "Master the fundamentals of data structures and algorithms with hands-on practice and real-world examples. Learn essential concepts for coding interviews and software development.",
    "shortDescription": "Master DSA with comprehensive coverage of algorithms and data structures",
    "thumbnail": "https://i.ytimg.com/vi/Qmt0QwzEmh0/maxresdefault.jpg",
    "instructor": {
      "id": {
        "$oid": "685fc69404baeb1d731511c0"
      },
      "name": "Rohit Negi",
      "bio": "I am Rohit Negi who graduated from IIT Guwahati and got Highest Placement in India in 2021. I got AIR 202 in GATE CSE in 2020.",
      "avatar": "https://example.com/rohit-negi-avatar.jpg",
      "socialLinks": [
        {
          "platform": "linkedin",
          "url": "https://linkedin.com/in/rohit-negi"
        },
        {
          "platform": "github",
          "url": "https://github.com/rohitnegi"
        }
      ]
    },
    "category": "Programming",
    "subcategory": "Data Structures",
    "level": "Beginner to Advanced",
    "tags": [
      "algorithms",
      "data-structures",
      "coding-interview",
      "c++",
      "java",
      "python"
    ],
    "pricing": {
      "type": "paid",
      "price": 99,
      "currency": "USD",
      "discountPrice": 79,
      "originalPrice": "100"
    },
    "stats": {
      "totalStudents": 0,
      "totalRatings": 0,
      "averageRating": 0,
      "totalReviews": 0,
      "completionRate": 0,
      "totalDuration": 35,
      "totalConcepts": 9,
      "totalVideos": 0,
      "totalArticles": 0,
      "totalProblems": 0,
      "totalQuizzes": 0
    },
    "requirements": [
      "Basic programming knowledge in any language",
      "Understanding of basic mathematics",
      "Familiarity with control structures (if/else, loops)"
    ],
    "learningOutcomes": [
      "Master fundamental data structures (arrays, linked lists, trees, graphs)",
      "Implement and analyze sorting and searching algorithms",
      "Solve complex algorithmic problems efficiently",
      "Understand time and space complexity analysis",
      "Prepare for technical coding interviews"
    ],
    "targetAudience": [
      "Software engineering students",
      "Junior developers preparing for interviews",
      "Computer science students",
      "Self-taught programmers"
    ],
    "status": "published",
    "publishedAt": {
      "$date": "2025-06-28T10:40:21.514Z"
    },
    "seo": {
      "keywords": [
        "data structures",
        "algorithms",
        "coding interview",
        "programming",
        "computer science"
      ]
    },
    "isPublic": true,
    "comingSoon": false,
    "isActive": true,
    "createdAt": {
      "$date": "2025-06-28T10:40:21.518Z"
    },
    "updatedAt": {
      "$date": "2025-07-02T09:55:35.581Z"
    },
    "entryConceptIds": [
      "686e7be67e20de1e720bfda8"
    ],
    "exitConceptIds": [
      "686e7be67e20de1e720bfe4e"
    ],
    "mockTestIds": [
      "dsa_mock_1",
      "dsa_mock_2"
    ],
    "concepts": [
      {
        "conceptId": "686e7be67e20de1e720bfda8",
        "title": "Variables"
      },
      {
        "conceptId": "686e7be67e20de1e720bfda9",
        "title": "Data Types"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdaa",
        "title": "Primitive Types"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdab",
        "title": "Non-Primitive Types"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdac",
        "title": "Operators"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdad",
        "title": "Control Flow"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdae",
        "title": "Conditional Statements"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdaf",
        "title": "Loops"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb0",
        "title": "Functions"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb1",
        "title": "Scope & Lifetime"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb2",
        "title": "Arrays"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb3",
        "title": "1D Arrays"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb4",
        "title": "2D Arrays"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb5",
        "title": "Dynamic Arrays"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb6",
        "title": "Strings"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb7",
        "title": "String Operations"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb8",
        "title": "String Matching"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdb9",
        "title": "Linked List"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdba",
        "title": "Singly Linked List"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdbb",
        "title": "Doubly Linked List"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdbc",
        "title": "Circular Linked List"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdbd",
        "title": "Stack"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdbe",
        "title": "Queue"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdbf",
        "title": "Priority Queue"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc0",
        "title": "Deque"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc1",
        "title": "Hashing"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc2",
        "title": "Hash Maps"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc3",
        "title": "Hash Sets"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc4",
        "title": "Trees"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc5",
        "title": "Binary Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc6",
        "title": "Binary Search Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc7",
        "title": "AVL Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc8",
        "title": "Red-Black Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdc9",
        "title": "Segment Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdca",
        "title": "Fenwick Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdcb",
        "title": "Trie"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdcc",
        "title": "Heap"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdcd",
        "title": "Graphs"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdce",
        "title": "Directed Graph"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdcf",
        "title": "Undirected Graph"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd0",
        "title": "Weighted Graph"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd1",
        "title": "Unweighted Graph"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd2",
        "title": "DFS"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd3",
        "title": "BFS"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd4",
        "title": "Dijkstra"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd5",
        "title": "Floyd-Warshall"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd6",
        "title": "Bellman-Ford"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd7",
        "title": "Topological Sort"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd8",
        "title": "Kruskal's Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdd9",
        "title": "Prim's Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdda",
        "title": "Disjoint Set"
      },
      {
        "conceptId": "686e7be67e20de1e720bfddb",
        "title": "Searching"
      },
      {
        "conceptId": "686e7be67e20de1e720bfddc",
        "title": "Linear Search"
      },
      {
        "conceptId": "686e7be67e20de1e720bfddd",
        "title": "Binary Search"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdde",
        "title": "Sorting"
      },
      {
        "conceptId": "686e7be67e20de1e720bfddf",
        "title": "Bubble Sort"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde0",
        "title": "Selection Sort"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde1",
        "title": "Insertion Sort"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde2",
        "title": "Merge Sort"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde3",
        "title": "Quick Sort"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde4",
        "title": "Heap Sort"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde5",
        "title": "Recursion"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde6",
        "title": "Backtracking"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde7",
        "title": "Divide and Conquer"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde8",
        "title": "Greedy"
      },
      {
        "conceptId": "686e7be67e20de1e720bfde9",
        "title": "Dynamic Programming"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdea",
        "title": "Memoization"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdeb",
        "title": "Tabulation"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdec",
        "title": "Bit Manipulation"
      },
      {
        "conceptId": "686e7be67e20de1e720bfded",
        "title": "Number Theory"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdee",
        "title": "N-ary Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdef",
        "title": "B-Trees"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf0",
        "title": "B+ Trees"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf1",
        "title": "Threaded Binary Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf2",
        "title": "Ternary Search Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf3",
        "title": "Segment Tree with Lazy Propagation"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf4",
        "title": "Articulation Point"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf5",
        "title": "Bridges in Graph"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf6",
        "title": "Tarjan’s Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf7",
        "title": "Kosaraju’s Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf8",
        "title": "Strongly Connected Components (SCC)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdf9",
        "title": "Eulerian Path/Circuit"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdfa",
        "title": "Hamiltonian Path"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdfb",
        "title": "Cycle Detection (Graphs)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdfc",
        "title": "2-SAT"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdfd",
        "title": "Bitmask DP"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdfe",
        "title": "Digit DP"
      },
      {
        "conceptId": "686e7be67e20de1e720bfdff",
        "title": "DP on Trees"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe00",
        "title": "DP on Graphs"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe01",
        "title": "Sliding Window DP"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe02",
        "title": "GCD & LCM"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe03",
        "title": "Euclidean Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe04",
        "title": "Sieve of Eratosthenes"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe05",
        "title": "Modular Arithmetic"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe06",
        "title": "Modular Exponentiation"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe07",
        "title": "Fermat’s Little Theorem"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe08",
        "title": "Chinese Remainder Theorem"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe09",
        "title": "Primality Test"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe0a",
        "title": "Extended Euclidean Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe0b",
        "title": "Miller-Rabin Primality Test"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe0c",
        "title": "Pollard’s Rho Factorization"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe0d",
        "title": "Totient Function (Euler’s Phi)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe0e",
        "title": "Sliding Window Technique"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe0f",
        "title": "Two Pointer Technique"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe10",
        "title": "Binary Search on Answer"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe11",
        "title": "Prefix Sum"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe12",
        "title": "Difference Array Technique"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe13",
        "title": "Monotonic Stack"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe14",
        "title": "Monotonic Queue"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe15",
        "title": "XOR Pattern"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe16",
        "title": "Counting Inversions"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe17",
        "title": "Dutch National Flag Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe18",
        "title": "Greedy Approach"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe19",
        "title": "Backtracking with Pruning"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe1a",
        "title": "In-place Algorithms"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe1b",
        "title": "Ternary Search"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe1c",
        "title": "Longest Common Subsequence (LCS)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe1d",
        "title": "Longest Increasing Subsequence (LIS)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe1e",
        "title": "Merge Intervals"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe1f",
        "title": "Matrix Traversal"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe20",
        "title": "Suffix Array"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe21",
        "title": "Suffix Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe22",
        "title": "Range Minimum Query (RMQ)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe23",
        "title": "Persistent Data Structures"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe24",
        "title": "Union-Find (Optimized)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe25",
        "title": "Skip List"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe26",
        "title": "Sparse Table"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe27",
        "title": "SQRT Decomposition"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe28",
        "title": "Meet in the Middle"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe29",
        "title": "Binary Lifting"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe2a",
        "title": "MO's Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe2b",
        "title": "Heavy-Light Decomposition"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe2c",
        "title": "Euler Tour Technique"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe2d",
        "title": "Fast Exponentiation"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe2e",
        "title": "Matrix Exponentiation"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe2f",
        "title": "Combinatorics (Permutations)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe30",
        "title": "Combinatorics (Combinations)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe31",
        "title": "LCP Array"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe32",
        "title": "Convex Hull (Graham Scan, Jarvis March)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe33",
        "title": "Line Sweep Algorithm"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe34",
        "title": "Centroid Decomposition"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe35",
        "title": "Multithreading"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe36",
        "title": "Mutex & Locks"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe37",
        "title": "Race Condition Handling"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe38",
        "title": "Producer-Consumer Problem"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe39",
        "title": "Deadlock Detection & Avoidance"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe3a",
        "title": "External Merge Sort"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe3b",
        "title": "Counting Sort with Buckets"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe3c",
        "title": "Bloom Filter"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe3d",
        "title": "HyperLogLog"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe3e",
        "title": "Cache-Friendly Traversal"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe3f",
        "title": "Row-Major vs Column-Major"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe40",
        "title": "Cache Oblivious Algorithms"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe41",
        "title": "Aho-Corasick Automaton"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe42",
        "title": "Suffix Automaton"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe43",
        "title": "Wavelet Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe44",
        "title": "Dynamic Connectivity (Link-Cut Tree)"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe45",
        "title": "Euler Tour Tree"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe46",
        "title": "Bitwise Operators"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe47",
        "title": "Pointers"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe48",
        "title": "Recursion Trees"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe49",
        "title": "Time Complexity Analysis"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe4a",
        "title": "Space Complexity Analysis"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe4b",
        "title": "Big O Notation"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe4c",
        "title": "Recursion vs Iteration"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe4d",
        "title": "Problem Decomposition"
      },
      {
        "conceptId": "686e7be67e20de1e720bfe4e",
        "title": "Debugging Techniques"
      }
    ]
  },
  {
    "_id": {
      "$oid": "685fc69504baeb1d731511c8"
    },
    "title": "Python Programming",
    "slug": "python-programming",
    "description": "Learn Python programming from basics to advanced concepts. Master Python syntax, data structures, object-oriented programming, and real-world applications.",
    "shortDescription": "Complete Python programming course from beginner to advanced",
    "thumbnail": "https://i.ytimg.com/vi/kqtD5dpn9C8/maxresdefault.jpg",
    "instructor": {
      "id": {
        "$oid": "685fc69404baeb1d731511c1"
      },
      "name": "Sarah Chen",
      "bio": "Senior Python Developer with 8+ years of experience. Former Google engineer and author of 'Python for Data Science'.",
      "avatar": "https://example.com/sarah-chen-avatar.jpg",
      "socialLinks": [
        {
          "platform": "linkedin",
          "url": "https://linkedin.com/in/sarah-chen"
        },
        {
          "platform": "github",
          "url": "https://github.com/sarahchen"
        }
      ]
    },
    "category": "Programming",
    "subcategory": "Python",
    "level": "Beginner to Advanced",
    "tags": [
      "python",
      "programming",
      "web-development",
      "data-science",
      "automation"
    ],
    "pricing": {
      "type": "paid",
      "price": 89,
      "currency": "USD",
      "discountPrice": 69,
      "originalPrice": "90"
    },
    "stats": {
      "totalStudents": 0,
      "totalRatings": 0,
      "averageRating": 0,
      "totalReviews": 0,
      "completionRate": 0,
      "totalDuration": 0,
      "totalConcepts": 0,
      "totalVideos": 0,
      "totalArticles": 0,
      "totalProblems": 0,
      "totalQuizzes": 0
    },
    "requirements": [
      "Basic computer literacy",
      "No prior programming experience required",
      "Willingness to learn and practice"
    ],
    "learningOutcomes": [
      "Master Python syntax and core concepts",
      "Build real-world applications using Python",
      "Understand object-oriented programming principles",
      "Work with Python data structures and collections",
      "Implement advanced Python features and best practices"
    ],
    "targetAudience": [
      "Complete beginners to programming",
      "Students learning their first programming language",
      "Professionals wanting to learn Python",
      "Anyone interested in web development or data science"
    ],
    "status": "published",
    "publishedAt": {
      "$date": "2025-06-30T14:20:15.123Z"
    },
    "seo": {
      "keywords": [
        "python",
        "programming",
        "learn python",
        "python tutorial",
        "python for beginners"
      ]
    },
    "isPublic": true,
    "comingSoon": false,
    "isActive": true,
    "createdAt": {
      "$date": "2025-06-30T14:20:15.123Z"
    },
    "updatedAt": {
      "$date": "2025-07-02T10:15:42.789Z"
    },
    "entryConceptIds": [
      "variables"
    ],
    "exitConceptIds": [
      "linked_lists"
    ],
    "mockTestIds": [
      "dsa_mock_1",
      "dsa_mock_2"
    ],
    "concepts": [
      {
        "conceptId": "variables",
        "title": "Unknown"
      },
      {
        "conceptId": "data_types",
        "title": "Unknown"
      },
      {
        "conceptId": "arrays",
        "title": "Unknown"
      },
      {
        "conceptId": "linked_lists",
        "title": "Unknown"
      }
    ]
  }
]