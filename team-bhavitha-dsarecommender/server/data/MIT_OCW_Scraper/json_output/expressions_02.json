{
  "title": "expressions",
  "lecture": "02",
  "content": "simple operations\nexpressions, variables and values\n6.0001 LECTURE 2\n2\n\nTODAY\nstring object type\nbranching and conditionals\nindentation\niteration and loops\n6.0001 LECTURE 2\n3\n\nSTRINGS\nletters, special characters, spaces, digits\nenclose in quotation marks or single quotes\nhi = \"hello there\"\nconcatenatestrings\nname = \"ana\"\ngreet = hi + name\ngreeting = hi + \"\"+ name\ndo some operationson a string as defined in Python docs\nsilly = hi + \"\"+ name * 3\n6.0001 LECTURE 2\n4\n\nINPUT/OUTPUT: print\nused to outputstuff to console\nkeyword is print\nx = 1\nprint(x)\nx_str= str(x)\nprint(\"my fav numis\", x, \".\", \"x =\", x)\nprint(\"my fav numis \" + x_str+ \". \" + \"x = \" + x_str)\n6.0001 LECTURE 2\n5\n\nINPUT/OUTPUT: input(\"\")\nprints whatever is in the quotes\nuser types in something and hits enter\nbinds that value to a variable\ntext = input(\"Type anything... \")\nprint(5*text)\ninputgives you a string so must cast if working \nwith numbers\nnum= int(input(\"Type a number... \"))\nprint(5*num)\n6.0001 LECTURE 2\n6\n\nCOMPARISON OPERATORS ON\nint,float, string\niand jare variable names\ncomparisons below evaluate to a Boolean \ni> j\ni>= j\ni< j\ni<= j\ni== jequalitytest, Trueif iis the same as j\ni!= jinequalitytest, Trueif inot the same as j\n6.0001 LECTURE 2\n7\n\nLOGIC OPERATORS ON bools\naand bare variable names (with Boolean values)\nnot aTrueif ais False\nFalseif ais True\na and bTrueif both are True\na or bTrueif either or both are True\n6.0001 LECTURE 2\n8\nABA and BA or B\nTrueTrueTrueTrue\nTrueFalseFalseTrue\nFalseTrueFalseTrue\nFalseFalseFalseFalse\n\nCOMPARISON EXAMPLE\npset_time= 15\nsleep_time= 8\nprint(sleep_time> pset_time)\nderive = True\ndrink = False\nboth = drink and derive\nprint(both)\n6.0001 LECTURE 2\n9\n\nIf right clear,\ngo right \nIf right blocked,\ngo forward\nIf right and \nfront blocked,\ngo left\nIf right , front, \nleft blocked,\ngo back\n6.0001 LECTURE 2\n10\n\nCONTROL FLOW -BRANCHING"
}